@page "/"
@inject TodoClient TodoClient

@attribute [Authorize]

@code {

	[CascadingParameter]
	UserInfo? user { set; get; } = new();

	private TodoItem? newTask = new TodoItem();
	private List<TodoItem>? tasks = new();


	protected override async Task OnInitializedAsync() =>
	
		tasks = await TodoClient.GetTodosAsync();
	
	


	private async Task AddTask()
	{
		if (!string.IsNullOrWhiteSpace(newTask.Title))
		{
			var createdTodo = await TodoClient.AddTodoAsync(newTask.Title);
			tasks!.Add(createdTodo!);
			newTask.Title = string.Empty;
			StateHasChanged();
		}
	}

	private async Task DeleteTask(TodoItem task)
	{
		if (await TodoClient.DeleteTodoAsync(task.Id))
		{
			tasks!.Remove(task);
			StateHasChanged();
		}
	}

	private async Task CompleteTask(TodoItem task)
	{
		if (!task.IsComplete)
		{
			await TodoClient.DoneTodoAsync(task);
			tasks!.Find(t => t.Id == task.Id)!.IsComplete = true;
			StateHasChanged();
		}
	}
}

<PageTitle>Todo App</PageTitle>

<div class="container">
	<header>
		<div class="logo">
			<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"
				 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon">
				<path d="M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z" />
				<polyline points="14 2 14 8 20 8" />
			</svg>
			<h1>Hi, @user!.FirstName</h1>
		</div>
	</header>

	<EditForm Model="newTask" OnValidSubmit="AddTask">
		<DataAnnotationsValidator />
	<div class="add-todo">

		<InputText @bind-Value="newTask!.Title" class="input-title" id="title" name="title" type="text" placeholder="Add a new task..." required />

       <ValidationMessage For="@(() => newTask.Title)" />
        
		<button type="submit" class="add-btn" >
			<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
				 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
				<circle cx="12" cy="12" r="10" />
				<path d="M8 12h8" />
				<path d="M12 8v8" />
			</svg>
			Add Task
		</button>
	</div>
	</EditForm>
	
	<div class="todo-list">
		@if (tasks.Any())
		{
			@foreach (var task in tasks)
			{
				<div class="todo-item @(task.IsComplete? "completed":"")">
					<button class="check-btn" @onclick="()  =>CompleteTask(task)">
						<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
							 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
							<path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z" />
							<path d="m9 12 2 2 4-4" />
						</svg>
					</button>

					<div class="todo-content">
						<span class="todo-text ">@task.Title</span>
						<span class="todo-date">@task.CreateAt.ToLocalTime().ToLongDateString()</span>
					</div>

					<button class="delete-btn" @onclick="() => DeleteTask(task)">
						<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none"
							 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
							<circle cx="12" cy="12" r="10" />
							<path d="m15 9-6 6" />
							<path d="m9 9 6 6" />
						</svg>
					</button>
				</div>
			}
		}
	</div>
	
</div>
