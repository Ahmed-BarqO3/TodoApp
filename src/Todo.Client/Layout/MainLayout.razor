@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IAccountManagment AccountMangment
@inject UserClient UserClient


<nav class="side-nav">
	<div class="user-profile">
		<div class="avatar">
			<img src="https://images.unsplash.com/photo-1640951613773-54706e06851d?q=80&w=100&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" alt="User Avatar">
		</div>
		<div class="user-info">
			<h2>@userInfo.FullName</h2>
			<p>@userInfo.Email</p>
		</div>
	</div>

	<ul class="nav-links">
		<li class="@(IsActivePage("/") ? "active" : "")" @onclick="Main">
			<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" /><polyline points="9 22 9 12 15 12 15 22" /></svg>
			Main
		</li>

		<li class="@(IsActivePage("/profile") ? "active" : "")" @onclick="Profile">
			<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" /><circle cx="12" cy="7" r="4" /></svg>
			Profile
		</li>

		<li class="logout" @onclick="Logout">
			<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4" /><polyline points="16 17 21 12 16 7" /><line x1="21" y1="12" x2="9" y2="12" /></svg>
			Logout
		</li>
	</ul>
</nav>


<CascadingValue Value="fName">
		@Body
</CascadingValue>

@code {

	UserInfo userInfo = new UserInfo();

	[CascadingParameter]
	string fName { get; set; }


	protected override async Task OnInitializedAsync()
	{
		var user = await UserClient.GetUserAsync();
		if (user is not null)
		{
			userInfo = user;
			fName = user!.FirstName;
		}
	}

	private async Task Logout()
	{
		await AccountMangment.LogoutAsync();
		NavigationManager.NavigateTo("/login");
	}

	private async Task Main()
	{
		NavigationManager.NavigateTo("/");
	}

	private async Task Profile()
	{
		NavigationManager.NavigateTo("/profile");
	}

	private bool IsActivePage(string page)
	{
		var uri = new Uri(NavigationManager.Uri);
		return uri.AbsolutePath.Equals(page, StringComparison.OrdinalIgnoreCase);
	}
}